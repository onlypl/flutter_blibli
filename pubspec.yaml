name: blibli
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.3.1 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  #组件化配置
  hi_net:
    path: ./component/hi_net
  hi_barrage:
    path: ./component/hi_barrage
  hi_base:
    path: ./component/hi_base
    
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  json_annotation: ^4.8.1  #创建数据模型配合json_serializable,build_runner使用
  fluttertoast: ^8.2.4      #Toast提示
  underline_indicator: ^0.0.4 #指示器
  card_swiper: ^3.0.1  #轮播图
  status_bar_control: ^3.2.1 #状态栏控件，可让您控制 iOS 和 Android 上的状态栏颜色、样式（主题）、可见性和半透明属性。
  flutter_staggered_grid_view: ^0.7.0 #瀑布流
  transparent_image: ^2.0.1 #淡入淡出图片
  #cached_network_image: ^3.3.1  #图片缓存
  lottie: ^3.1.0 #json动画
  animations: ^2.0.11  #容器转场动画
  pull_to_refresh: ^2.0.0 #上下拉刷新
  webview_flutter: ^4.7.0 #webView组件
  flutter_easyloading: ^3.0.5 # HUD
  loading_animation_widget: ^1.2.1 #全局加载动画
  fijkplayer: ^0.11.0   #播放器
  video_player: ^2.8.3 #官方播放器插件
  chewie: ^1.7.5     #基于video_payer封装的播放器
  flutter_screenutil: ^5.9.0 #适配屏幕和字体大小的flutter插件。让你的UI在不同的屏幕尺寸上显示合理的布局
  flutter_overlay: ^1.0.0   #评论输入浮层 

  provider: ^6.1.2        #状态管理
  shared_preferences: any
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  json_serializable: ^6.7.1 #数据模型序列化 json_annotation,build_runner使用
  build_runner: ^2.4.8 #轻量级数据存储 数据异步持久化
  
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    - assets/images/
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
